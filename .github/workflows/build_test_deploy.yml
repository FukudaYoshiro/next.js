on:
  push:
    branches: [canary]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn install --frozen-lockfile --check-files
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - uses: actions/cache@v1
        id: cache-build
        with:
          path: '.'
          key: ${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn lint

  testAll:
    name: Test All
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5, 6]
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: node run-tests.js --timings -g ${{ matrix.group }}/6 -c 3
        env:
          NEXT_TELEMETRY_DISABLED: 1
          HEADLESS: true

  testsPass:
    name: thank you, next
    runs-on: ubuntu-latest
    needs: [lint, testAll]
    steps:
      - run: exit 0

  testFirefox:
    name: Test Firefox (production)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn testfirefox --forceExit test/integration/production/
        env:
          NEXT_TELEMETRY_DISABLED: 1
          HEADLESS: true

  testSafari:
    name: Test Safari (production)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'canary'
    steps:
      - uses: actions/cache@v1
        id: restore-build
        with:
          path: '.'
          key: ${{ github.sha }}

      - run: yarn testsafari --forceExit test/integration/production/
        env:
          NEXT_TELEMETRY_DISABLED: 1
          BROWSERSTACK: true
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

  saveNpmToken:
    name: Potentially save npm token
    runs-on: ubuntu-latest
    if: github.ref == 'canary'
    needs: [build, testAll]
    steps:
      - run: ([[ ! -z $NPM_TOKEN ]] && echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc) || echo "Did not write npm token"

  publishRelease:
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs: saveNpmToken
    steps:
      - run: ./publish-release.sh
